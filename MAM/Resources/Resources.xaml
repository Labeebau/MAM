<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.UI.Controls"
    xmlns:local="using:MAM">
    <!-- Define theme colors -->
    <Color x:Key="ThemePrimaryBackgroundColor">#111111</Color>
    <SolidColorBrush x:Key="ThemePrimaryBackgroundColorBrush" Color="{StaticResource ThemePrimaryBackgroundColor}" />
    <Color x:Key="ThemeSecondaryBackgroundColor">#222222</Color>
    <SolidColorBrush x:Key="ThemeSecondaryBackgroundColorBrush" Color="{StaticResource ThemeSecondaryBackgroundColor}" />
    <Color x:Key="ThemeForegroundColor">#FAF9F6</Color>
    <SolidColorBrush x:Key="ThemeForegroundColorBrush" Color="{StaticResource ThemeForegroundColor}" />
    <!--<Color x:Key="ThemeHighlightColor">#40B5AD</Color>-->
    <Color x:Key="ThemeHighlightColor">#61c9f8</Color>
    <SolidColorBrush x:Key="ThemeHighlightColorBrush" Color="{StaticResource ThemeHighlightColor}" />
    <Color x:Key="ThemeControlBackgroundColor">#222222</Color>
    <SolidColorBrush x:Key="ThemeControlBackgroundColorBrush" Color="{StaticResource ThemeControlBackgroundColor}" />
    <Color x:Key="PlaceHolderForegroundColor">#808080</Color>
    <SolidColorBrush x:Key="PlaceHolderForegroundColorBrush" Color="{StaticResource PlaceHolderForegroundColor}" />
    <Color x:Key="PageBackgroundColor">#111111</Color>
    <SolidColorBrush x:Key="PageBackgroundColorBrush" Color="{StaticResource PageBackgroundColor}" />
    <!-- Define a style for TextBox -->
    
    <!--<Style  TargetType="TextBox">
        --><!--<Setter Property="Background" Value="LightGray"/>
        <Setter Property="BorderBrush" Value="DarkGray"/>
        <Setter Property="BorderThickness" Value="2"/>--><!--
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>-->

    <!-- Global style for TextBox without x:Key -->
    <Style TargetType="TextBox">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Padding" Value="2,6,2,2"/>
        <Setter Property="Margin" Value="0,4,0,0"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundColor}"/>
        <Setter Property="PlaceholderForeground" Value="{StaticResource PlaceHolderForegroundColor}"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="300"/>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="SelectionHighlightColor" Value="{StaticResource ThemeHighlightColorBrush}"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="TextBoxTextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="TextLineBounds" Value="Tight"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundColor}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="Margin" Value="0,-5,0,0"/>

    </Style>
    <Style TargetType="FontIcon">
        <Setter Property="FontFamily" Value="{StaticResource FontAwesome}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Foreground" Value="{StaticResource ThemeForegroundColor}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="Button" x:Key="SmallIconButton">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="37"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="3"/>
    </Style>
    <Style TargetType="ToggleButton" x:Key="SmallToggleButton">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Border x:Name="RootBorder"
                        Background="{TemplateBinding Background}"
                        CornerRadius="{TemplateBinding CornerRadius}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <!-- You can add your badge here if needed -->
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <VisualState.Setters>
                                        <Setter Target="RootBorder.Background" Value="#333"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <VisualState.Setters>
                                        <Setter Target="RootBorder.Background" Value="#444"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Checked">
                                    <VisualState.Setters>
                                        <Setter Target="RootBorder.Background" Value="#333333"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="PointerOverChecked">
                                    <VisualState.Setters>
                                        <Setter Target="RootBorder.Background" Value="#40B5AD"/>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="5"/>
        <!--<Setter Property="Padding" Value="0"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid x:Name="RootGrid" Background="{TemplateBinding Background}">
                        --><!-- Content (icon) centered --><!--
                        <ContentPresenter
                        x:Name="ContentPresenter"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"/>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="PointerOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                        Storyboard.TargetName="RootGrid"
                                        Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#22000000"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                        Storyboard.TargetName="RootGrid"
                                        Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#33000000"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                        Storyboard.TargetName="RootGrid"
                                        Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="#55007ACC"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>-->
        <!--</Setter>-->
    </Style>






    <Style TargetType="DropDownButton" x:Key="TabDropDownButton">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CornerRadius" Value="3"/>
    </Style>
    <Style TargetType="GridView">
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="IsItemClickEnabled" Value="True"/>
        <Setter Property="Background" Value="{StaticResource ThemeSecondaryBackgroundColor}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="20"/>
    </Style>

    <Style TargetType="ContentDialog" x:Key="CustomContentDialogStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContentDialog">
                    <Grid Background="{TemplateBinding Background}" CornerRadius="4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <!-- Title -->
                        <ContentPresenter Grid.Row="0"
                                          Content="{TemplateBinding Title}"
                                          Margin="0,0,0,16"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Top"
                                          ContentTemplate="{TemplateBinding TitleTemplate}" />

                        <!-- Content -->
                        <ContentPresenter Grid.Row="1"
                                          Content="{TemplateBinding Content}"
                                          Margin="{TemplateBinding Padding}"
                                          HorizontalAlignment="Stretch"
                                          VerticalAlignment="Stretch" />

                        <!-- Button Panel -->
                        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Spacing="8">
                            <!-- Custom TextBlock -->
                            <TextBlock Text="Custom Info"
                                       VerticalAlignment="Center"
                                       Margin="0,0,16,0"
                                       Foreground="Gray" />

                            <!-- Buttons -->
                            <Button Content="{TemplateBinding PrimaryButtonText}" 
                                    Command="{TemplateBinding PrimaryButtonCommand}" />
                            <Button Content="{TemplateBinding SecondaryButtonText}" 
                                    Command="{TemplateBinding SecondaryButtonCommand}" />
                            <Button Content="{TemplateBinding CloseButtonText}" 
                                    Command="{TemplateBinding CloseButtonCommand}" />
                        </StackPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderlessFlyoutPresenterStyle" TargetType="FlyoutPresenter">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <!-- ThemeResource keeps it consistent in light/dark -->
        <Setter Property="Background" Value="{ThemeResource SolidBackgroundFillColorBase}"/>
        <!-- optional: remove corner radius if you want a perfect rectangle -->
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <!-- 2) Apply it to ALL Flyouts by default -->
    <Style TargetType="Flyout">
        <Setter Property="FlyoutPresenterStyle" Value="{StaticResource BorderlessFlyoutPresenterStyle}"/>
    </Style>

    <!-- 3) If you also use MenuFlyout, do the same -->
    <Style x:Key="BorderlessMenuFlyoutPresenterStyle" TargetType="MenuFlyoutPresenter">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{ThemeResource SolidBackgroundFillColorBase}"/>
        <Setter Property="CornerRadius" Value="0"/>
    </Style>

    <Style TargetType="MenuFlyout">
        <Setter Property="MenuFlyoutPresenterStyle" Value="{StaticResource BorderlessMenuFlyoutPresenterStyle}"/>
    </Style>
    <!--<Style x:Key="BorderlessMenuFlyoutPresenterStyle" TargetType="MenuFlyoutPresenter">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="{ThemeResource ThemePrimaryBackgroundColor}"/>
        <Setter Property="CornerRadius" Value="0"/>
    </Style>-->

</ResourceDictionary>